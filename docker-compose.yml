version: '3'
services:
  mongodb:
    image: mongo:latest
    restart: always
    env_file:
      - .env
    environment:
      - MONGO_INITDB_DATABASE=${MONGODB_DB}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PW}
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
    ports:
      - "27017:27017"
    volumes:
      - dbdata:/data/db
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
    networks:
      - apidbnetwork

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      - MONGODB_HOST=mongodb
      - MONGOBD_DB=${MONGODB_DB}
      - MONGODB_PW=${MONGODB_PW}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PORT=${MONGODB_PORT}
    ports:
      - "3000:3000"
    working_dir: /api
    volumes:
      - ./api:/api
      - /api/node_modules
    depends_on:
      - mongodb
    networks:
      - apidbnetwork
      - apiadminnetwork
      - apicustomernetwork

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    restart: always
    working_dir: /admin
    volumes:
      - ./admin:/admin
      - /admin/node_modules
    depends_on:
      - api
    networks:
      - apiadminnetwork
      - adminnginxnetwork

  customer:
    build:
      context: ./customer
      dockerfile: Dockerfile
    restart: always
    working_dir: /customer
    volumes:
      - ./customer:/customer
      - /customer/node_modules
    depends_on:
      - api
    networks:
      - apicustomernetwork
      - customernginxnetwork

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
      - "3000:3000"
      - "5000:5000"
      - "5005:5005"
    restart: always
    depends_on:
      - api
      - admin
      - customer
    networks:
      - adminnginxnetwork
      - customernginxnetwork

networks:
  apidbnetwork:
    driver: bridge
  apiadminnetwork:
    driver: bridge
  apicustomernetwork:
    driver: bridge
  adminnginxnetwork:
    driver: bridge
  customernginxnetwork:
    driver: bridge

volumes:
  dbdata: